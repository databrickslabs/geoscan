name: Geoscan Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "New release version"
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:


      - name: Checkout project
        uses: actions/checkout@v2


      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-


      - name: Set up Maven Central
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          server-id: github


      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"


      - name: Compute next development version
        run: |
          releaseVersion=${{ github.event.inputs.releaseVersion }}
          n=${releaseVersion//[!0-9]/ }
          a=(${n//\./ })
          nextPatch=$((${a[2]} + 1))
          developmentVersion="${a[0]}.${a[1]}.${nextPatch}-SNAPSHOT"
          echo "DEVELOPMENT_VERSION=${developmentVersion}" >> $GITHUB_ENV


      - name: Prepare release
        run: mvn -B release:prepare -DreleaseVersion=${{ github.event.inputs.releaseVersion }} -DdevelopmentVersion=${{ env.DEVELOPMENT_VERSION }} -Dmaven.test.skip=true -P release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Perform release
        run: mvn -B release:perform -Dmaven.test.skip=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


#      - name: Set up Python
#        uses: actions/setup-python@v1
#        with:
#          python-version: "3.9"
#
#      - name: Cache pip repo
#        uses: actions/cache@v2
#        id: cache
#        with:
#          path: ~/.cache/pip
#          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#            ${{ runner.os }}-pip-
#
#      - name: Install pip
#        run: python -m pip install --upgrade pip
#
#      - name: Install dependencies
#        working-directory: ./python
#        run: pip install -U -r requirements.txt
#
#      - name: Build python dist
#        working-directory: ./python
#        run: python setup.py clean bdist_wheel
#
#      - name: Publish a Python distribution to PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          user: __token__
#          password: ${{ secrets.LABS_PYPI_TOKEN }}
#          packages_dir: dist/
