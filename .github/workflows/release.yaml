name: Geoscan Release

env:
  MAVEN_OPTS: -Xmx4g

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "New release version"
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure git
        run: |
          git config --global user.email "antoine.amend+labs@databricks.com"
          git config --global user.name "Databrickslabs"

      - name: Set up Maven Central
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
          server-id: github

      - name: Compute next development version
        run: |
          releaseVersion=${{ github.event.inputs.releaseVersion }}
          n=${releaseVersion//[!0-9]/ }
          a=(${n//\./ })
          nextPatch=$((${a[2]} + 1))
          developmentVersion="${a[0]}.${a[1]}.${nextPatch}-SNAPSHOT"
          echo "DEVELOPMENT_VERSION=${developmentVersion}" >> $GITHUB_ENV

      - name: Prepare release
        run: mvn -B -DpreparationGoals=clean release:prepare -DreleaseVersion=${{ github.event.inputs.releaseVersion }} -DdevelopmentVersion=${{ env.DEVELOPMENT_VERSION }} -Dmaven.test.skip=true -P release

      - name: Perform release
        run: mvn -B release:perform -Dmaven.test.skip=true -P release

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"

      - name: Cache pip repo
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            ${{ runner.os }}-pip-

      - name: Install pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        working-directory: ./python
        run: pip install -U -r requirements.txt

      - name: Build python dist
        working-directory: ./python
        run: python setup.py clean bdist_wheel

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.LABS_PYPI_TOKEN }}
          packages_dir: dist/
